#! /bin/sh
#
#   根据源文件生成 configure.scan -> configure.ac
#
arg1=`wslpath -a $1`

cd $arg1
mkdir -pv ./bak

if [ -f "./depcomp" ];then
    :
else
    cp -a /usr/share/automake-1.15/depcomp ./
fi

if [ -f "./configure.ac" ];then
    :
else
    /usr/bin/autoscan
    returnvalue=$?
    #echo "autoscan return: $returnvalue"
    if [ $returnvalue -ne 0 ]; then
        echo -e "\033[31m autoscan failed \033[0m"
        exit 1
    else
        echo -e "\033[32m autoscan succeed \033[0m"
        mv configure.scan configure.ac
        acconfigfiles=`grep "AC_CONFIG_FILES(\[Makefile\])" ./configure.ac`
        [[ $acconfigfiles =~ "" ]] && sed -i "s/AC_OUTPUT/AC_CONFIG_FILES(\[Makefile\])\nAC_OUTPUT/g" ./configure.ac
        
        mainfile="main.c"
        if [ -f "./main.c" ]; then
            mainfile="main.c"
        else
            mainfile=`ls -1 *.c |head -1`
            [[ $mainfile =~ "" ]] && mainfile="main.c" 
        fi
        sed -i "s/AC_INIT(\[FULL-PACKAGE-NAME\], \[VERSION\], \[BUG-REPORT-ADDRESS\])/#AC_INIT(\[FULL-PACKAGE-NAME\], \[VERSION\], \[BUG-REPORT-ADDRESS\])\nAC_INIT($mainfile,1.0,test@qq.com)\nAM_INIT_AUTOMAKE(\[subdir-objects\])/g" ./configure.ac
        #AM_INIT_AUTOMAKE([subdir-objects])
        #AC_CONFIG_MACRO_DIR([m4]) #用于libtoolize
        #AM_PROG_CC_C_O   #子目录的编译
        #AC_PROG_LIBTOOL
        #AC_SUBST(LIBTOOL_DEPS)
    fi
fi
# generate Makefile.am
if [ -f "./Makefile.am" ];then
    exit 0
fi

cat > Makefile.am << END_TEXT
AutoMAKE_OPTIONS= foreign
# SUBDIRS 表示在处理目录之前，要递归处理哪些子目录
# EXTRA_DIST 将哪些文件一起打包。
# HEADERS 头文件
# PROGRAMS 表示可执行文件
# LIBRARIES 表示库文件 
# LTLIBRARIES 也是表示库文件，前面的LT表示libtool。
# SCRIPTS 脚本文件，可以被用于执行。如：example_SCRIPTS，如果用这样的话，需要定义安装目录下的example目录
# DATA 数据文件，不能执行。
# \$(prefix),表示安装的路径
# 静态库，XXXX_LTLIBRARIES或者XXXX_LIBRARIES就可以了。如果不需要安装到系统，将XXXX换成noinst
# 动态库，XXX.so文件，需要用_PROGRAMS类型，安装到lib下，则为lib_PROGRAMS=



# Note:target part
bin_PROGRAMS = main
# noinst_PROGRAMS = 
# 
# Note:source part
main_SOURCES =
# main_LDADD =
# main_LDFLAGS =
# main_LDFLAGS =
# main_DEPENDENCIES =
# 
# Note:lib part
# lib_LIBRARIES =
# _a_SOURCES =
# _a_LDADD =
# _a_LIBADD =
# _a_LDFLAGS =
# 
# Note:header part
# include_HEADERS = 
# 
# Note:data part
# data_DATA =
END_TEXT
exit 0